// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id    Int   @id @default(autoincrement())
  name  String
  email   String @unique
  password String
  workspaceUsers Workspace_Users[]
}

model Workspace {
  workspace_id   Int  @id @default(autoincrement())
  name    String
  description String?
  visibility String @default("private")
  boards Board[]
  workspacesUser Workspace_Users[]
}

model Workspace_Users {
  workspace_users_id  Int  @id @default(autoincrement())
  user_id User @relation(fields: [userId], references: [id])
  workspace_id Workspace @relation(fields: [workspaceId], references: [workspace_id])
  role_name  String
  userId  Int
  workspaceId Int
}

model Board {
  board_id   Int @id @default(autoincrement())
  title   String
  description   String?
  workspace Workspace @relation(fields: [workspaceId], references: [workspace_id], onDelete: Cascade)
  workspaceId   Int
  lists List[]
}

model List {
  list_id   Int @id @default(autoincrement())
  name  String
  position  Int @default(autoincrement())
  board Board @relation(fields: [boardId], references: [board_id], onDelete: Cascade)
  boardId Int
  cards Card[]
}

model Card {
  card_id   Int @id @default(autoincrement())
  title String
  list List @relation(fields: [listId], references: [list_id], onDelete: Cascade)
  listId  Int
}